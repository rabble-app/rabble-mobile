// Mocks generated by Mockito 5.4.4 from annotations
// in rabble/test/auth/user_name_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rabble/core/config/export.dart' as _i3;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBehaviorSubject_0<T> extends _i1.SmartFake
    implements _i2.BehaviorSubject<T> {
  _FakeBehaviorSubject_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRabbleBaseState_2 extends _i1.SmartFake
    implements _i3.RabbleBaseState {
  _FakeRabbleBaseState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamTransformer_3<S, T> extends _i1.SmartFake
    implements _i4.StreamTransformer<S, T> {
  _FakeStreamTransformer_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MyRabbleAccountCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyRabbleAccountCubit extends _i1.Mock
    implements _i3.MyRabbleAccountCubit {
  MockMyRabbleAccountCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BehaviorSubject<bool> get focus$ => (super.noSuchMethod(
        Invocation.getter(#focus$),
        returnValue: _FakeBehaviorSubject_0<bool>(
          this,
          Invocation.getter(#focus$),
        ),
      ) as _i2.BehaviorSubject<bool>);

  @override
  set focus$(_i2.BehaviorSubject<bool>? _focus$) => super.noSuchMethod(
        Invocation.setter(
          #focus$,
          _focus$,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i3.UserModel> get userDataSubject$ =>
      (super.noSuchMethod(
        Invocation.getter(#userDataSubject$),
        returnValue: _FakeBehaviorSubject_0<_i3.UserModel>(
          this,
          Invocation.getter(#userDataSubject$),
        ),
      ) as _i2.BehaviorSubject<_i3.UserModel>);

  @override
  set userDataSubject$(_i2.BehaviorSubject<_i3.UserModel>? _userDataSubject$) =>
      super.noSuchMethod(
        Invocation.setter(
          #userDataSubject$,
          _userDataSubject$,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i5.File> get selectedImageSubject$ =>
      (super.noSuchMethod(
        Invocation.getter(#selectedImageSubject$),
        returnValue: _FakeBehaviorSubject_0<_i5.File>(
          this,
          Invocation.getter(#selectedImageSubject$),
        ),
      ) as _i2.BehaviorSubject<_i5.File>);

  @override
  set selectedImageSubject$(
          _i2.BehaviorSubject<_i5.File>? _selectedImageSubject$) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedImageSubject$,
          _selectedImageSubject$,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get nameController => (super.noSuchMethod(
        Invocation.getter(#nameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#nameController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i3.TextEditingController get surNameController => (super.noSuchMethod(
        Invocation.getter(#surNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#surNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i2.BehaviorSubject<List<_i3.NotificationData>>
      get notificationsListSubject$ => (super.noSuchMethod(
            Invocation.getter(#notificationsListSubject$),
            returnValue: _FakeBehaviorSubject_0<List<_i3.NotificationData>>(
              this,
              Invocation.getter(#notificationsListSubject$),
            ),
          ) as _i2.BehaviorSubject<List<_i3.NotificationData>>);

  @override
  set notificationsListSubject$(
          _i2.BehaviorSubject<List<_i3.NotificationData>>?
              _notificationsListSubject$) =>
      super.noSuchMethod(
        Invocation.setter(
          #notificationsListSubject$,
          _notificationsListSubject$,
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic Function(String) get nameC => (super.noSuchMethod(
        Invocation.getter(#nameC),
        returnValue: (String __p0) => null,
      ) as dynamic Function(String));

  @override
  _i4.Stream<String> get nameStream => (super.noSuchMethod(
        Invocation.getter(#nameStream),
        returnValue: _i4.Stream<String>.empty(),
      ) as _i4.Stream<String>);

  @override
  dynamic Function(String) get surnameC => (super.noSuchMethod(
        Invocation.getter(#surnameC),
        returnValue: (String __p0) => null,
      ) as dynamic Function(String));

  @override
  _i4.Stream<String> get surnameStream => (super.noSuchMethod(
        Invocation.getter(#surnameStream),
        returnValue: _i4.Stream<String>.empty(),
      ) as _i4.Stream<String>);

  @override
  dynamic Function(String) get emailC => (super.noSuchMethod(
        Invocation.getter(#emailC),
        returnValue: (String __p0) => null,
      ) as dynamic Function(String));

  @override
  _i4.Stream<String> get emailStream => (super.noSuchMethod(
        Invocation.getter(#emailStream),
        returnValue: _i4.Stream<String>.empty(),
      ) as _i4.Stream<String>);

  @override
  dynamic Function(String) get phoneC => (super.noSuchMethod(
        Invocation.getter(#phoneC),
        returnValue: (String __p0) => null,
      ) as dynamic Function(String));

  @override
  _i4.Stream<String> get phoneStream => (super.noSuchMethod(
        Invocation.getter(#phoneStream),
        returnValue: _i4.Stream<String>.empty(),
      ) as _i4.Stream<String>);

  @override
  _i4.Stream<bool> get validUpdateDataField => (super.noSuchMethod(
        Invocation.getter(#validUpdateDataField),
        returnValue: _i4.Stream<bool>.empty(),
      ) as _i4.Stream<bool>);

  @override
  _i4.Stream<bool> get validUserInfoField => (super.noSuchMethod(
        Invocation.getter(#validUserInfoField),
        returnValue: _i4.Stream<bool>.empty(),
      ) as _i4.Stream<bool>);

  @override
  _i3.RabbleBaseState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeRabbleBaseState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.RabbleBaseState);

  @override
  _i4.Stream<_i3.RabbleBaseState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i3.RabbleBaseState>.empty(),
      ) as _i4.Stream<_i3.RabbleBaseState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.StreamTransformer<String, String> get validateUsername =>
      (super.noSuchMethod(
        Invocation.getter(#validateUsername),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateUsername),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateEmail =>
      (super.noSuchMethod(
        Invocation.getter(#validateEmail),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateEmail),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validatePassword =>
      (super.noSuchMethod(
        Invocation.getter(#validatePassword),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validatePassword),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validatePhone =>
      (super.noSuchMethod(
        Invocation.getter(#validatePhone),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validatePhone),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateOtp => (super.noSuchMethod(
        Invocation.getter(#validateOtp),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateOtp),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateEmpty =>
      (super.noSuchMethod(
        Invocation.getter(#validateEmpty),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateEmpty),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateGroupName =>
      (super.noSuchMethod(
        Invocation.getter(#validateGroupName),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateGroupName),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateCardNumber =>
      (super.noSuchMethod(
        Invocation.getter(#validateCardNumber),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateCardNumber),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateCVV => (super.noSuchMethod(
        Invocation.getter(#validateCVV),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateCVV),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.StreamTransformer<String, String> get validateExpiry =>
      (super.noSuchMethod(
        Invocation.getter(#validateExpiry),
        returnValue: _FakeStreamTransformer_3<String, String>(
          this,
          Invocation.getter(#validateExpiry),
        ),
      ) as _i4.StreamTransformer<String, String>);

  @override
  _i4.Future<void> fetchMyData() => (super.noSuchMethod(
        Invocation.method(
          #fetchMyData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> changePhoto(_i3.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePhoto,
          [context],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateProfileData() => (super.noSuchMethod(
        Invocation.method(
          #updateProfileData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> addProfileData(
    String? phoneNumber,
    Map<dynamic, dynamic>? data,
    _i3.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addProfileData,
          [
            phoneNumber,
            data,
            context,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteMyAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteMyAccount,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> fetchNotifications() => (super.noSuchMethod(
        Invocation.method(
          #fetchNotifications,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emit(_i3.RabbleBaseState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i3.Change<_i3.RabbleBaseState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
